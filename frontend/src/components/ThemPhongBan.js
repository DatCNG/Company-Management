import React, { useEffect, useState } from "react";
import { CKEditor } from "@ckeditor/ckeditor5-react";
import ClassicEditor from "@ckeditor/ckeditor5-build-classic";
import axios from "axios";
import "../styles/style.css";
import { IoAddCircle } from "react-icons/io5";

const ThemPhongBan = ({ onClose = () => {}, onAdded = () => {} }) => {
  const [tenPB, setTenPB] = useState("");
  const [moTa, setMoTa] = useState("<p>M√¥ t·∫£ ph√≤ng ban...</p>");
  const [maCT, setMaCT] = useState("");

  const [companies, setCompanies] = useState([]);

  const API_URL = "http://localhost:5000/api/departments";

  // üß≠ L·∫•y danh s√°ch c√¥ng ty ƒë·ªÉ ch·ªçn
  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await axios.get("http://localhost:5000/api/companies");
        setCompanies(res.data);
      } catch (err) {
        console.error("‚ùå L·ªói t·∫£i danh s√°ch c√¥ng ty:", err);
      }
    };
    fetchData();
  }, []);

  // üß© G·ª≠i form th√™m ph√≤ng ban
  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!tenPB.trim() || !maCT) {
      alert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p t√™n ph√≤ng ban v√† ch·ªçn c√¥ng ty!");
      return;
    }

    try {
      await axios.post(API_URL, {
        TenPB: tenPB.trim(),
        MoTa: moTa,
        MaCT: maCT,
        TruongPhong: null, // üö´ Kh√¥ng ch·ªçn tr∆∞·ªüng ph√≤ng ban ƒë·∫ßu
      });

      alert("‚úÖ Th√™m ph√≤ng ban th√†nh c√¥ng!");
      onAdded();
      onClose();
    } catch (err) {
      console.error("‚ùå L·ªói khi th√™m ph√≤ng ban:", err);
      alert("Kh√¥ng th·ªÉ th√™m ph√≤ng ban!");
    }
  };

  return (
    <div className="quanly-container qlct-container">
      <div className="them-body themct-body">
        <form className="form themct-form" onSubmit={handleSubmit}>
          {/* === T√™n ph√≤ng ban === */}
          <div className="form-gr">
            <div className="form-gr-content">
              <label className="label">T√™n ph√≤ng ban:</label>
              <input
                type="text"
                className="input"
                placeholder="Nh·∫≠p t√™n ph√≤ng ban..."
                value={tenPB}
                onChange={(e) => setTenPB(e.target.value)}
                required
              />
            </div>
          </div>

          {/* === Thu·ªôc c√¥ng ty === */}
          <div className="form-gr">
            <div className="form-gr-content">
              <label className="label">Thu·ªôc c√¥ng ty:</label>
              <select
                className="select"
                value={maCT}
                onChange={(e) => setMaCT(e.target.value)}
                required
              >
                <option value="">-- Ch·ªçn c√¥ng ty --</option>
                {companies.map((ct) => (
                  <option key={ct.MaCT} value={ct.MaCT}>
                    {ct.TenCT}
                  </option>
                ))}
              </select>
            </div>
          </div>

          {/* === M√¥ t·∫£ === */}
          <div className="form-gr">
            <div
              className="form-gr-content"
              style={{ flexDirection: "column" }}
            >
              <label className="label">M√¥ t·∫£:</label>
              <CKEditor
                editor={ClassicEditor}
                data={moTa}
                onChange={(_, editor) => setMoTa(editor.getData())}
                config={{
                  toolbar: [
                    "heading",
                    "|",
                    "bold",
                    "italic",
                    "underline",
                    "link",
                    "|",
                    "bulletedList",
                    "numberedList",
                    "blockQuote",
                    "|",
                    "insertTable",
                    "undo",
                    "redo",
                  ],
                }}
              />
            </div>
          </div>

          {/* === Buttons === */}
          <div className="button-group">
            <button type="button" className="button-cancel" onClick={onClose}>
              H·ªßy
            </button>
            <button type="submit" className="button-add">
              <IoAddCircle style={{ marginRight: ".3rem" }} /> Th√™m ph√≤ng ban
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default ThemPhongBan;
